body {
  color: #aaa;
  background-color: #222;
}
body > .container {
  margin: 10px 100px 500px 100px;
  font-family: verdana, arial, sans-serif;
}

details summary {
  cursor: pointer;
  margin: 0 5px;
  padding: 2px 20px;
  border-bottom: 1px solid #aaa;
  width: 100px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

details[open] summary {
  width: initial;
  width: 100%;
  width: calc(100% - 5px - 5px);
}

div.lfd {
  color: #aaa;
  margin: 5px;
  padding: 5px;
}
div.lfd .lfd-part .lfd-line-text {
  color: #2ba;
  font-size: 20px;
}
div.lfd .lfd-part.red-descr .lfd-h-line.red-descr {
  border-color: #f88;
}
div.lfd .lfd-part.red-descr .lfd-td-block.red-descr {
  color: #f88;
}
div.lfd .lfd-part.red-content .lfd-line-text {
  color: #f88;
}

.lfd {
  -webkit-filter: blur(10px);
          filter: blur(10px);
}
.lfd.executed, .lfd.exec-error {
  -webkit-filter: none;
          filter: none;
}

.lfd-edit .lfd {
  -webkit-filter: none;
          filter: none;
}

.ace-plug-kit__code-wrapper {
  border-color: #aaa;
}

code {
  color: #0a8;
  padding-left: 10px;
  padding-right: 10px;
  white-space: nowrap;
  white-space: pre;
  font-family: consolas;
  text-shadow: 0 0 2px #08a;
}
code span.opt {
  color: #aaa;
  text-shadow: 0 0 2px #aaa;
}
code span.opt:before {
  content: " [";
}
code span.opt:after {
  content: "]";
}
code span.meta {
  color: #aaa;
  font-family: courier;
  text-shadow: none;
}
code span.meta.cb:before, code span.meta.corner:before {
  content: "<";
}
code span.meta.cb:after, code span.meta.corner:after {
  content: ">";
}
code span.meta.sb:before, code span.meta.sqare:before {
  content: "[";
}
code span.meta.sb:after, code span.meta.sqare:after {
  content: "]";
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJfbGZkLXN0eWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDQyxPQU5RO0VBT1Isa0JBTlE7O0FBT1I7RUFDQztFQUNBOzs7QUFLRDtFQUNDO0VBRUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBTUQ7RUFDQztFQUNBO0VBQ0E7OztBQy9CRjtFQUNDLE9ERFE7RUNFUjtFQUNBOztBQUdDO0VBQ0MsT0RMTTtFQ01OOztBQUlEO0VBQ0MsY0RWTTs7QUNZUDtFQUNDLE9EYk07O0FDaUJQO0VBQ0MsT0RsQk07OztBQ3VCVDtFQUNDOztBQUNBO0VBRUM7OztBQUlEO0VBQ0M7OztBRFFGO0VBQ0MsY0E1Q1E7OztBQStDVDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBOztBQUNBO0VBQ0M7RUFDQTs7QUFDQTtFQUNDOztBQUVEO0VBQ0M7O0FBS0Y7RUFDQztFQUNBO0VBQ0E7O0FBT0M7RUFDQzs7QUFFRDtFQUNDOztBQUtEO0VBQ0M7O0FBRUQ7RUFDQyIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkbWFpbl9jOiAjYWFhO1xyXG4kYmdfYyAgOiAjMjIyO1xyXG4kZ3JlZW4gOiAjMmJhO1xyXG4kcmVkICAgOiAjZjg4O1xyXG5cclxuYm9keSB7XHJcblx0Y29sb3I6ICRtYWluX2M7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogJGJnX2M7XHJcblx0Pi5jb250YWluZXIge1xyXG5cdFx0bWFyZ2luOiAxMHB4IDEwMHB4IDUwMHB4IDEwMHB4O1xyXG5cdFx0Zm9udC1mYW1pbHk6IHZlcmRhbmEsIGFyaWFsLCBzYW5zLXNlcmlmO1xyXG5cdH1cclxufVxyXG5cclxuZGV0YWlscyB7XHJcblx0c3VtbWFyeSB7XHJcblx0XHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0XHQvLyBtYXJnaW46IDJweCAzMHB4O1xyXG5cdFx0bWFyZ2luOiAwIDVweDtcclxuXHRcdHBhZGRpbmc6IDJweCAyMHB4O1xyXG5cdFx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRtYWluX2M7XHJcblx0XHR3aWR0aDogMTAwcHg7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHJcblx0fVxyXG59XHJcblxyXG5kZXRhaWxzW29wZW5dIHtcclxuXHRzdW1tYXJ5IHtcclxuXHRcdHdpZHRoOiBpbml0aWFsO1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0XHR3aWR0aDogY2FsYygxMDAlIC0gNXB4IC0gNXB4KTtcclxuXHR9XHJcbn1cclxuXHJcbmRldGFpbHM6bm90KFtvcGVuXSkge1xyXG5cdHN1bW1hcnkge1xyXG5cdFx0Ly8gdHJhbnNpdGlvbjogYWxsIC41cyBsaW5lYXI7XHJcblx0fVxyXG59XHJcblxyXG5AaW1wb3J0IFwibGZkLXN0eWxlXCI7XHJcblxyXG4uYWNlLXBsdWcta2l0X19jb2RlLXdyYXBwZXIge1xyXG5cdGJvcmRlci1jb2xvcjogJG1haW5fYztcclxufVxyXG5cclxuY29kZXtcclxuXHRjb2xvcjogIzBhODtcclxuXHRwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcblx0cGFkZGluZy1yaWdodDogMTBweDtcclxuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdHdoaXRlLXNwYWNlOiBwcmU7XHJcblx0Ly8gYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmZjtcclxuXHRmb250LWZhbWlseTogY29uc29sYXM7XHJcblx0dGV4dC1zaGFkb3c6IDAgMCAycHggIzA4YTtcclxuXHRzcGFuLm9wdHtcclxuXHRcdGNvbG9yOiAjYWFhO1xyXG5cdFx0dGV4dC1zaGFkb3c6IDAgMCAycHggI2FhYTtcclxuXHRcdCY6YmVmb3Jle1xyXG5cdFx0XHRjb250ZW50OiBcIiBbXCI7XHJcblx0XHR9XHJcblx0XHQmOmFmdGVye1xyXG5cdFx0XHRjb250ZW50OiBcIl1cIjtcclxuXHRcdH1cclxuXHRcdCY6YmVmb3JlLFxyXG5cdFx0JjphZnRlcnt9XHJcblx0fVxyXG5cdHNwYW4ubWV0YSB7XHJcblx0XHRjb2xvcjogI2FhYTtcclxuXHRcdGZvbnQtZmFtaWx5OiBjb3VyaWVyO1xyXG5cdFx0dGV4dC1zaGFkb3c6IG5vbmU7XHJcblx0XHQmOmJlZm9yZXt9XHJcblx0XHQmOmFmdGVye31cclxuXHRcdFxyXG5cdFx0XHJcblx0XHQmLmNiLFxyXG5cdFx0Ji5jb3JuZXIge1xyXG5cdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRjb250ZW50OiBcIjxcIjtcclxuXHRcdFx0fVxyXG5cdFx0XHQmOmFmdGVye1xyXG5cdFx0XHRcdGNvbnRlbnQ6IFwiPlwiO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQmLnNiLFxyXG5cdFx0Ji5zcWFyZSB7XHJcblx0XHRcdCY6YmVmb3Jle1xyXG5cdFx0XHRcdGNvbnRlbnQ6IFwiW1wiO1xyXG5cdFx0XHR9XHJcblx0XHRcdCY6YWZ0ZXJ7XHJcblx0XHRcdFx0Y29udGVudDogXCJdXCI7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0iLCJkaXYubGZkIHtcclxuXHRjb2xvcjogJG1haW5fYztcclxuXHRtYXJnaW46IDVweDtcclxuXHRwYWRkaW5nOiA1cHg7XHJcblx0XHJcblx0LmxmZC1wYXJ0IHtcclxuXHRcdC5sZmQtbGluZS10ZXh0IHtcclxuXHRcdFx0Y29sb3I6ICRncmVlbjtcclxuXHRcdFx0Zm9udC1zaXplOiAyMHB4O1xyXG5cdFx0fVxyXG5cdH1cclxuXHQubGZkLXBhcnQucmVkLWRlc2NyIHtcclxuXHRcdC5sZmQtaC1saW5lLnJlZC1kZXNjciB7XHJcblx0XHRcdGJvcmRlci1jb2xvcjogJHJlZDtcclxuXHRcdH1cclxuXHRcdC5sZmQtdGQtYmxvY2sucmVkLWRlc2NyIHtcclxuXHRcdFx0Y29sb3I6ICRyZWQ7XHJcblx0XHR9XHJcblx0fVxyXG5cdC5sZmQtcGFydC5yZWQtY29udGVudCB7XHJcblx0XHQubGZkLWxpbmUtdGV4dCB7XHJcblx0XHRcdGNvbG9yOiAkcmVkO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLmxmZCB7XHJcblx0ZmlsdGVyOiBibHVyKDEwcHgpO1xyXG5cdCYuZXhlY3V0ZWQsXHJcblx0Ji5leGVjLWVycm9yIHtcclxuXHRcdGZpbHRlcjogbm9uZTtcclxuXHR9XHJcbn1cclxuLmxmZC1lZGl0IHtcclxuXHQubGZkIHtcclxuXHRcdGZpbHRlcjogbm9uZTtcclxuXHR9XHJcbn0iXX0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLnNjc3MiLCJfbGZkLXN0eWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDQyxXQ0REO0VERUMsc0JDUFE7QURHVDtBQUtDO0VDT0EsOEJBQUE7RUFDQyx1Q0FBQTtBRFRGOztBQVFDO0VBQ0MsZUFBQTtFQ1lELGFBQUE7RUFDQyxpQkFBQTtFQUNBLDZCQUFBO0VBQ0EsWUFBQTtFRFRBLDhCQUFBO1VBQUEsc0JBQUE7QUFORjs7QUFZQztFRXRCQyxjQUFBO0VBQ0MsV0FBQTtFQUNBLDZCQUFBO0FGY0g7O0FDakJBO0VESkMsV0NJRDtFREhDLFdBQUE7RUFDQSxZQUFBO0FBeUJEO0FDbEJFO0VESEMsV0NBRjtFRENFLGVBQUE7QUF3Qkg7QUNiRTtFQUNBLGtCRGpCTztBQWdDVDtBQ2JFO0VETkMsV0FiTTtBQW1DVDtBQ1JFO0VBQ0EsV0Q1Qk87QUFzQ1Q7O0FBZkE7RUFDQywwQkFBQTtVQUFBLGtCQUFBO0FBa0JEO0FBakJDO0VFckJFLG9CQUFBO1VBQUEsWUFBQTtBRnlDSDs7QUFkQztFQUNDLG9CQUFBO1VBQUEsWUFBQTtBQWlCRjs7QUUxQkE7RUZrQkMsa0JDdkNEO0FEbURBOztBQVRBO0VBQ0MsV0FBQTtFQUNBLGtCQUFBO0VFZkEsbUJBQUE7RUZpQkEsbUJBQUE7RUFDQSxnQkFBQTtFQ1RELHFCQUFBO0VEWUMseUJBQUE7QUFXRDtBQVZDO0VBQ0MsV0FBQTtFQ1ZGLHlCQUFBO0FEdUJBO0FDdEJDO0VBQ0EsYUFBQTtBRHdCRDtBQ3RCQztFQUNBLFlBQUE7QUR3QkQ7QUFSQztFQ1ZDLFdBQUE7RURZQSxvQkFBQTtFQ1hBLGlCQUFBO0FEc0JGO0FDWkU7RUFDQSxZQUFBO0FEY0Y7QUFIRztFQ0hBLFlBQUE7QURTSDtBQUFHO0VDQUEsWUFBQTtBREdIO0FBQUc7RUNBQSxZQUFBO0FER0g7QUFDQSxpeUhBQWl5SCIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJG1haW5fYzogI2FhYTtcclxuJGJnX2MgIDogIzIyMjtcclxuJGdyZWVuIDogIzJiYTtcclxuJHJlZCAgIDogI2Y4ODtcclxuXHJcbmJvZHkge1xyXG5cdGNvbG9yOiAkbWFpbl9jO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICRiZ19jO1xyXG5cdD4uY29udGFpbmVyIHtcclxuXHRcdG1hcmdpbjogMTBweCAxMDBweCA1MDBweCAxMDBweDtcclxuXHRcdGZvbnQtZmFtaWx5OiB2ZXJkYW5hLCBhcmlhbCwgc2Fucy1zZXJpZjtcclxuXHR9XHJcbn1cclxuXHJcbmRldGFpbHMge1xyXG5cdHN1bW1hcnkge1xyXG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0Ly8gbWFyZ2luOiAycHggMzBweDtcclxuXHRcdG1hcmdpbjogMCA1cHg7XHJcblx0XHRwYWRkaW5nOiAycHggMjBweDtcclxuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbWFpbl9jO1xyXG5cdFx0d2lkdGg6IDEwMHB4O1xyXG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRcdFxyXG5cdH1cclxufVxyXG5cclxuZGV0YWlsc1tvcGVuXSB7XHJcblx0c3VtbWFyeSB7XHJcblx0XHR3aWR0aDogaW5pdGlhbDtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0d2lkdGg6IGNhbGMoMTAwJSAtIDVweCAtIDVweCk7XHJcblx0fVxyXG59XHJcblxyXG5kZXRhaWxzOm5vdChbb3Blbl0pIHtcclxuXHRzdW1tYXJ5IHtcclxuXHRcdC8vIHRyYW5zaXRpb246IGFsbCAuNXMgbGluZWFyO1xyXG5cdH1cclxufVxyXG5cclxuQGltcG9ydCBcImxmZC1zdHlsZVwiO1xyXG5cclxuLmFjZS1wbHVnLWtpdF9fY29kZS13cmFwcGVyIHtcclxuXHRib3JkZXItY29sb3I6ICRtYWluX2M7XHJcbn1cclxuXHJcbmNvZGV7XHJcblx0Y29sb3I6ICMwYTg7XHJcblx0cGFkZGluZy1sZWZ0OiAxMHB4O1xyXG5cdHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHR3aGl0ZS1zcGFjZTogcHJlO1xyXG5cdC8vIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3ZmY7XHJcblx0Zm9udC1mYW1pbHk6IGNvbnNvbGFzO1xyXG5cdHRleHQtc2hhZG93OiAwIDAgMnB4ICMwOGE7XHJcblx0c3Bhbi5vcHR7XHJcblx0XHRjb2xvcjogI2FhYTtcclxuXHRcdHRleHQtc2hhZG93OiAwIDAgMnB4ICNhYWE7XHJcblx0XHQmOmJlZm9yZXtcclxuXHRcdFx0Y29udGVudDogXCIgW1wiO1xyXG5cdFx0fVxyXG5cdFx0JjphZnRlcntcclxuXHRcdFx0Y29udGVudDogXCJdXCI7XHJcblx0XHR9XHJcblx0XHQmOmJlZm9yZSxcclxuXHRcdCY6YWZ0ZXJ7fVxyXG5cdH1cclxuXHRzcGFuLm1ldGEge1xyXG5cdFx0Y29sb3I6ICNhYWE7XHJcblx0XHRmb250LWZhbWlseTogY291cmllcjtcclxuXHRcdHRleHQtc2hhZG93OiBub25lO1xyXG5cdFx0JjpiZWZvcmV7fVxyXG5cdFx0JjphZnRlcnt9XHJcblx0XHRcclxuXHRcdFxyXG5cdFx0Ji5jYixcclxuXHRcdCYuY29ybmVyIHtcclxuXHRcdFx0JjpiZWZvcmV7XHJcblx0XHRcdFx0Y29udGVudDogXCI8XCI7XHJcblx0XHRcdH1cclxuXHRcdFx0JjphZnRlcntcclxuXHRcdFx0XHRjb250ZW50OiBcIj5cIjtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Ji5zYixcclxuXHRcdCYuc3FhcmUge1xyXG5cdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRjb250ZW50OiBcIltcIjtcclxuXHRcdFx0fVxyXG5cdFx0XHQmOmFmdGVye1xyXG5cdFx0XHRcdGNvbnRlbnQ6IFwiXVwiO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59IiwiJG1haW5fYzogI2FhYTtcclxuJGJnX2MgIDogIzIyMjtcclxuJGdyZWVuIDogIzJiYTtcclxuJHJlZCAgIDogI2Y4ODtcclxuXHJcbmJvZHkge1xyXG5cdGNvbG9yOiAkbWFpbl9jO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICRiZ19jO1xyXG5cdD4uY29udGFpbmVyIHtcclxuXHRcdG1hcmdpbjogMTBweCAxMDBweCA1MDBweCAxMDBweDtcclxuXHRcdGZvbnQtZmFtaWx5OiB2ZXJkYW5hLCBhcmlhbCwgc2Fucy1zZXJpZjtcclxuXHR9XHJcbn1cclxuXHJcbmRldGFpbHMge1xyXG5cdHN1bW1hcnkge1xyXG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0Ly8gbWFyZ2luOiAycHggMzBweDtcclxuXHRcdG1hcmdpbjogMCA1cHg7XHJcblx0XHRwYWRkaW5nOiAycHggMjBweDtcclxuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbWFpbl9jO1xyXG5cdFx0d2lkdGg6IDEwMHB4O1xyXG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRcdFxyXG5cdH1cclxufVxyXG5cclxuZGV0YWlsc1tvcGVuXSB7XHJcblx0c3VtbWFyeSB7XHJcblx0XHR3aWR0aDogaW5pdGlhbDtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0d2lkdGg6IGNhbGMoMTAwJSAtIDVweCAtIDVweCk7XHJcblx0fVxyXG59XHJcblxyXG5kZXRhaWxzOm5vdChbb3Blbl0pIHtcclxuXHRzdW1tYXJ5IHtcclxuXHRcdC8vIHRyYW5zaXRpb246IGFsbCAuNXMgbGluZWFyO1xyXG5cdH1cclxufVxyXG5cclxuQGltcG9ydCBcImxmZC1zdHlsZVwiO1xyXG5cclxuLmFjZS1wbHVnLWtpdF9fY29kZS13cmFwcGVyIHtcclxuXHRib3JkZXItY29sb3I6ICRtYWluX2M7XHJcbn1cclxuXHJcbmNvZGV7XHJcblx0Y29sb3I6ICMwYTg7XHJcblx0cGFkZGluZy1sZWZ0OiAxMHB4O1xyXG5cdHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHR3aGl0ZS1zcGFjZTogcHJlO1xyXG5cdC8vIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3ZmY7XHJcblx0Zm9udC1mYW1pbHk6IGNvbnNvbGFzO1xyXG5cdHRleHQtc2hhZG93OiAwIDAgMnB4ICMwOGE7XHJcblx0c3Bhbi5vcHR7XHJcblx0XHRjb2xvcjogI2FhYTtcclxuXHRcdHRleHQtc2hhZG93OiAwIDAgMnB4ICNhYWE7XHJcblx0XHQmOmJlZm9yZXtcclxuXHRcdFx0Y29udGVudDogXCIgW1wiO1xyXG5cdFx0fVxyXG5cdFx0JjphZnRlcntcclxuXHRcdFx0Y29udGVudDogXCJdXCI7XHJcblx0XHR9XHJcblx0XHQmOmJlZm9yZSxcclxuXHRcdCY6YWZ0ZXJ7fVxyXG5cdH1cclxuXHRzcGFuLm1ldGEge1xyXG5cdFx0Y29sb3I6ICNhYWE7XHJcblx0XHRmb250LWZhbWlseTogY291cmllcjtcclxuXHRcdHRleHQtc2hhZG93OiBub25lO1xyXG5cdFx0JjpiZWZvcmV7fVxyXG5cdFx0JjphZnRlcnt9XHJcblx0XHRcclxuXHRcdFxyXG5cdFx0Ji5jYixcclxuXHRcdCYuY29ybmVyIHtcclxuXHRcdFx0JjpiZWZvcmV7XHJcblx0XHRcdFx0Y29udGVudDogXCI8XCI7XHJcblx0XHRcdH1cclxuXHRcdFx0JjphZnRlcntcclxuXHRcdFx0XHRjb250ZW50OiBcIj5cIjtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Ji5zYixcclxuXHRcdCYuc3FhcmUge1xyXG5cdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRjb250ZW50OiBcIltcIjtcclxuXHRcdFx0fVxyXG5cdFx0XHQmOmFmdGVye1xyXG5cdFx0XHRcdGNvbnRlbnQ6IFwiXVwiO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59IiwiZGl2LmxmZCB7XHJcblx0Y29sb3I6ICRtYWluX2M7XHJcblx0bWFyZ2luOiA1cHg7XHJcblx0cGFkZGluZzogNXB4O1xyXG5cdFxyXG5cdC5sZmQtcGFydCB7XHJcblx0XHQubGZkLWxpbmUtdGV4dCB7XHJcblx0XHRcdGNvbG9yOiAkZ3JlZW47XHJcblx0XHRcdGZvbnQtc2l6ZTogMjBweDtcclxuXHRcdH1cclxuXHR9XHJcblx0LmxmZC1wYXJ0LnJlZC1kZXNjciB7XHJcblx0XHQubGZkLWgtbGluZS5yZWQtZGVzY3Ige1xyXG5cdFx0XHRib3JkZXItY29sb3I6ICRyZWQ7XHJcblx0XHR9XHJcblx0XHQubGZkLXRkLWJsb2NrLnJlZC1kZXNjciB7XHJcblx0XHRcdGNvbG9yOiAkcmVkO1xyXG5cdFx0fVxyXG5cdH1cclxuXHQubGZkLXBhcnQucmVkLWNvbnRlbnQge1xyXG5cdFx0LmxmZC1saW5lLXRleHQge1xyXG5cdFx0XHRjb2xvcjogJHJlZDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi5sZmQge1xyXG5cdGZpbHRlcjogYmx1cigxMHB4KTtcclxuXHQmLmV4ZWN1dGVkLFxyXG5cdCYuZXhlYy1lcnJvciB7XHJcblx0XHRmaWx0ZXI6IG5vbmU7XHJcblx0fVxyXG59XHJcbi5sZmQtZWRpdCB7XHJcblx0LmxmZCB7XHJcblx0XHRmaWx0ZXI6IG5vbmU7XHJcblx0fVxyXG59Il19 */
